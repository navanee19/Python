class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
    
class LinkedList:
    def __init__(self):
        self.head = None
        self.last_node = None
        self.prev = None
    
    def add(self,data):
        if self.last_node is None:
            self.head = Node(data)
            self.last_node = self.head
        else:
            self.last_node.next = Node(data)
            self.last_node = self.last_node.next
    
    def display(self):
        current = self.head
        while current is not None:
            print(current.data)
            current = current.next
            
    def rev(self):
        prev = None
        current = self.head
        while(current!=None and current.data % 2 == 0):
            next=current.next
            current.next=prev
            prev=current
            current=next
        if current!=self.head:
            self.head.next=current
        self.head=prev
        

def main():
    orig_list = LinkedList()
    num = int(input())
    arr = list(map(int, input().split()))
    #arr =[2,18,24,3,5,7,9]
    n=len(arr)
    for i in arr:
        orig_list.add(i)
    orig_list.rev()
    orig_list.display()
        


if __name__ == "__main__":
    main()